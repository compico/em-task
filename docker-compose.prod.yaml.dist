services:
  app:
    build:
      context: .
      dockerfile: docker/go/Dockerfile.prod
    container_name: em-go-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./configs/config.yaml:/app/configs/config.yaml:ro
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    container_name: em-postgres-prod
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 111111
      POSTGRES_DB: app
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d app"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local
